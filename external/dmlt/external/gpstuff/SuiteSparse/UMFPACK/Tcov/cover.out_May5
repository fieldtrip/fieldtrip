================================================================================
umf_2by2.c
================================================================================
================================================================================
umf_analyze.c
================================================================================
     24    219	    #####:  216:	    return (FALSE) ;	/* internal error! */
================================================================================
umf_apply_order.c
================================================================================
================================================================================
umf_assemble.c
================================================================================
================================================================================
umf_assemble_fixq.c
================================================================================
================================================================================
umf_blas3_update.c
================================================================================
================================================================================
umf_build_tuples.c
================================================================================
     24     80	    #####:   77:		return (FALSE) ;	/* out of memory for row tuples */
     24     98	    #####:   95:		return (FALSE) ;	/* out of memory for col tuples */
================================================================================
umf_colamd.c
================================================================================
     24   2706	    #####: 2703:		KILL_ROW (r) ;
================================================================================
umf_create_element.c
================================================================================
     24    250	    #####:  247:	    return (FALSE) ;	/* out of memory */
     24    261	    #####:  258:	    return (FALSE) ;	/* out of memory */
     24    437	    #####:  434:		    return (UMF_get_memory (Numeric, Work, 0, r2, c2,do_Fcpos));
     24    540	    #####:  537:		    return (UMF_get_memory (Numeric, Work, 0, r2, c2,do_Fcpos));
================================================================================
umf_extend_front.c
================================================================================
================================================================================
umf_free.c
================================================================================
================================================================================
umf_fsize.c
================================================================================
     24     55	    #####:   52:		frsize = Int_MAX ;
================================================================================
umf_garbage_collection.c
================================================================================
================================================================================
umf_get_memory.c
================================================================================
     24    111	    #####:  108:	newsize = (Int) bsize ;	/* we cannot increase the size beyond bsize */
================================================================================
umf_grow_front.c
================================================================================
     24     90	    #####:   87:	return (FALSE) ;
     24    118	    #####:  115:	double a = 0.9 * sqrt ((Int_MAX / sizeof (Entry)) / s) ;
     24    119	    #####:  116:	fnr2 = MAX (fnr_min, a * fnr2) ;
     24    120	    #####:  117:	fnc2 = MAX (fnc_min, a * fnc2) ;
     24    122	    #####:  119:	newsize = fnr2 * fnc2 ;
     24    124	    #####:  121:	if (fnr2 % 2 == 0) fnr2++ ;
     24    125	    #####:  122:	fnc2 = newsize / fnr2 ;
     24    183	    #####:  180:	    return (FALSE) ;	/* out of memory */
================================================================================
umf_init_front.c
================================================================================
     24     77	    #####:   74:	    return (FALSE) ;
================================================================================
umf_is_permutation.c
================================================================================
================================================================================
umf_kernel.c
================================================================================
================================================================================
umf_kernel_init.c
================================================================================
     24    514	    #####:  511:	return (FALSE) ;	/* pattern changed */
     24    542	    #####:  539:	    return (FALSE) ;	/* pattern changed */
     24    606	    #####:  603:		return (FALSE) ;	/* pattern has changed */
     24    642	    #####:  639:		    return (FALSE) ;	/* pattern has changed */
     24    710	    #####:  707:		    return (FALSE) ;	/* pattern changed */
     24    723	    #####:  720:		    return (FALSE) ;	/* pattern changed */
     24    735	    #####:  732:	    return (FALSE) ;	/* pattern changed */
     24    827	    #####:  824:		    return (FALSE) ;	/* pattern changed */
     24    863	    #####:  860:	    return (FALSE) ;	/* pattern changed */
     24    905	    #####:  902:	    return (FALSE) ;	/* pattern changed */
     24    919	    #####:  916:	    return (FALSE) ;	/* pattern changed */
     24   1031	    #####: 1028:	return (FALSE) ;	/* pattern changed */
================================================================================
umf_kernel_wrapup.c
================================================================================
================================================================================
umf_lhsolve.c
================================================================================
================================================================================
umf_local_search.c
================================================================================
     24    654	    #####:  651:				return (UMFPACK_ERROR_different_pattern) ;
     24    743	    #####:  740:	    return (UMFPACK_ERROR_different_pattern) ;
================================================================================
umf_lsolve.c
================================================================================
================================================================================
umf_ltsolve.c
================================================================================
================================================================================
umf_malloc.c
================================================================================
================================================================================
umf_mem_alloc_element.c
================================================================================
     24     46	    #####:   43:	return (0) ;	/* problem is too large */
================================================================================
umf_mem_alloc_head_block.c
================================================================================
================================================================================
umf_mem_alloc_tail_block.c
================================================================================
================================================================================
umf_mem_free_tail_block.c
================================================================================
================================================================================
umf_mem_init_memoryspace.c
================================================================================
================================================================================
umf_realloc.c
================================================================================
     24     55	    #####:   52:	return ((void *) NULL) ;
================================================================================
umf_report_perm.c
================================================================================
================================================================================
umf_report_vector.c
================================================================================
================================================================================
umf_row_search.c
================================================================================
     24    616	    #####:  613:		    return (UMFPACK_ERROR_different_pattern) ;
     24    662	    #####:  659:				return (UMFPACK_ERROR_different_pattern) ;
     24    749	    #####:  746:		return (UMFPACK_ERROR_different_pattern) ;
================================================================================
umf_scale.c
================================================================================
================================================================================
umf_scale_column.c
================================================================================
================================================================================
umf_set_stats.c
================================================================================
================================================================================
umf_singletons.c
================================================================================
================================================================================
umf_solve.c
================================================================================
     24   1313	    #####: 1310:	    omega [1] = tau ;
     24   1314	    #####: 1311:	    omega [2] = tau ;
     24   1315	    #####: 1312:	    break ;
================================================================================
umf_start_front.c
================================================================================
     24    153	    #####:  150:	maxfrsize = Int_MAX / sizeof (Entry) ;
     24    172	    #####:  169:	    fsize = Int_MAX / sizeof (Entry) ;
     24    190	    #####:  187:		fsize2 = Int_MAX / sizeof (Entry) ;
================================================================================
umf_store_lu.c
================================================================================
     24    346	    #####:  343:		return (FALSE) ;	/* out of memory */
     24    352	    #####:  349:		return (FALSE) ;	/* out of memory */
     24    771	    #####:  768:		return (FALSE) ;	/* out of memory */
     24    778	    #####:  775:		return (FALSE) ;	/* out of memory */
================================================================================
umf_store_lu_drop.c
================================================================================
     24    326	    #####:  323:	    Int r2, c2 ;
     24    329	    #####:  326:	    if (Work->do_grow)
     24    333	    #####:  330:		r2 = fnrows ;
     24    334	    #####:  331:		c2 = fncols ;
     24    339	    #####:  336:		r2 = MAX (fnrows, Work->fnrows_new + 1) ;
     24    340	    #####:  337:		c2 = MAX (fncols, Work->fncols_new + 1) ;
     24    343	    #####:  340:	    if (!UMF_get_memory (Numeric, Work, size, r2, c2, TRUE))
     24    346	    #####:  343:		return (FALSE) ;	/* out of memory */
     24    348	    #####:  345:	    p = UMF_mem_alloc_head_block (Numeric, size) ;
     24    349	    #####:  346:	    if (!p)
     24    352	    #####:  349:		return (FALSE) ;	/* out of memory */
     24    355	    #####:  352:	    fnc_curr = Work->fnc_curr ;
     24    356	    #####:  353:	    fnr_curr = Work->fnr_curr ;
     24    357	    #####:  354:	    Flublock = Work->Flublock ;
     24    358	    #####:  355:	    Flblock  = Work->Flblock ;
     24    359	    #####:  356:	    Fublock  = Work->Fublock ;
     24    360	    #####:  357:	    Fl1 = Flublock + kk * nb ;
     24    361	    #####:  358:	    Fl2 = Flblock  + kk * fnr_curr ;
     24    494	    #####:  491:			pos = llen++ ;
     24    495	    #####:  492:			Lpattern [pos] = row2 ;
     24    496	    #####:  493:			Lpos [row2] = pos ;
     24    497	    #####:  494:			*Li++ = row2 ;
     24    750	    #####:  747:	    Int r2, c2 ;
     24    753	    #####:  750:	    if (Work->do_grow)
     24    757	    #####:  754:		r2 = fnrows ;
     24    758	    #####:  755:		c2 = fncols ;
     24    763	    #####:  760:		r2 = MAX (fnrows, Work->fnrows_new + 1) ;
     24    764	    #####:  761:		c2 = MAX (fncols, Work->fncols_new + 1) ;
     24    767	    #####:  764:	    if (!UMF_get_memory (Numeric, Work, size, r2, c2, TRUE))
     24    771	    #####:  768:		return (FALSE) ;	/* out of memory */
     24    773	    #####:  770:	    p = UMF_mem_alloc_head_block (Numeric, size) ;
     24    774	    #####:  771:	    if (!p)
     24    778	    #####:  775:		return (FALSE) ;	/* out of memory */
     24    781	    #####:  778:	    fnc_curr = Work->fnc_curr ;
     24    782	    #####:  779:	    fnr_curr = Work->fnr_curr ;
     24    783	    #####:  780:	    Flublock = Work->Flublock ;
     24    784	    #####:  781:	    Flblock  = Work->Flblock ;
     24    785	    #####:  782:	    Fublock  = Work->Fublock ;
     24    786	    #####:  783:	    Fu1 = Flublock + kk ;
     24    787	    #####:  784:	    Fu2 = Fublock  + kk * fnc_curr ;
================================================================================
umf_symbolic_usage.c
================================================================================
================================================================================
umf_transpose.c
================================================================================
================================================================================
umf_triplet_map_nox.c
================================================================================
================================================================================
umf_triplet_map_x.c
================================================================================
================================================================================
umf_triplet_nomap_nox.c
================================================================================
================================================================================
umf_triplet_nomap_x.c
================================================================================
================================================================================
umf_tuple_lengths.c
================================================================================
================================================================================
umf_uhsolve.c
================================================================================
================================================================================
umf_usolve.c
================================================================================
================================================================================
umf_utsolve.c
================================================================================
================================================================================
umf_valid_numeric.c
================================================================================
================================================================================
umf_valid_symbolic.c
================================================================================
================================================================================
umfpack_col_to_triplet.c
================================================================================
================================================================================
umfpack_defaults.c
================================================================================
================================================================================
umfpack_free_numeric.c
================================================================================
================================================================================
umfpack_free_symbolic.c
================================================================================
================================================================================
umfpack_get_determinant.c
================================================================================
     24    217	    #####:  214:		Info [UMFPACK_STATUS] = UMFPACK_WARNING_singular_matrix ;
     24    218	    #####:  215:		break ;
================================================================================
umfpack_get_lunz.c
================================================================================
================================================================================
umfpack_get_numeric.c
================================================================================
================================================================================
umfpack_get_symbolic.c
================================================================================
================================================================================
umfpack_load_numeric.c
================================================================================
     24     99	    #####:   96:	(void) UMF_free ((void *) Numeric) ;
     24    100	    #####:   97:	fclose (f) ;
     24    101	    #####:   98:	return (UMFPACK_ERROR_file_IO) ;
     24    158	    #####:  155:	UMFPACK_free_numeric ((void **) &Numeric) ;
     24    159	    #####:  156:	return (UMFPACK_ERROR_invalid_Numeric_object) ;
================================================================================
umfpack_load_symbolic.c
================================================================================
     24     99	    #####:   96:	(void) UMF_free ((void *) Symbolic) ;
     24    100	    #####:   97:	fclose (f) ;
     24    101	    #####:   98:	return (UMFPACK_ERROR_file_IO) ;
     24    162	    #####:  159:	UMFPACK_free_symbolic ((void **) &Symbolic) ;
     24    163	    #####:  160:	return (UMFPACK_ERROR_invalid_Symbolic_object) ;
================================================================================
umfpack_numeric.c
================================================================================
     24    186	    #####:  183:	Info [UMFPACK_STATUS] = UMFPACK_ERROR_out_of_memory ;
     24    187	    #####:  184:	return (UMFPACK_ERROR_out_of_memory) ;
================================================================================
umfpack_qsymbolic.c
================================================================================
     24    516	    #####:  513:	Info [UMFPACK_STATUS] = UMFPACK_ERROR_out_of_memory ;
     24    517	    #####:  514:	return (UMFPACK_ERROR_out_of_memory) ;
     24    891	    #####:  888:	    Info [UMFPACK_STATUS] = UMFPACK_ERROR_out_of_memory ;
     24    892	    #####:  889:	    error (&Symbolic, SW) ;
     24    893	    #####:  890:	    return (UMFPACK_ERROR_out_of_memory) ;
     24    912	    #####:  909:		Info [UMFPACK_STATUS] = UMFPACK_ERROR_out_of_memory ;
     24    913	    #####:  910:		error (&Symbolic, SW) ;
     24    914	    #####:  911:		return (UMFPACK_ERROR_out_of_memory) ;
     24    981	    #####:  978:		strategy = UMFPACK_STRATEGY_2BY2 ;
     24   1461	    #####: 1458:	    Info [UMFPACK_STATUS] = UMFPACK_ERROR_internal_error ;
     24   1462	    #####: 1459:	    error (&Symbolic, SW) ;
     24   1463	    #####: 1460:	    return (UMFPACK_ERROR_internal_error) ;
     24   1815	    #####: 1812:	    Info [UMFPACK_STATUS] = UMFPACK_ERROR_out_of_memory ;
     24   1816	    #####: 1813:	    error (&Symbolic, SW) ;
     24   1817	    #####: 1814:	    return (UMFPACK_ERROR_out_of_memory) ;
================================================================================
umfpack_report_control.c
================================================================================
================================================================================
umfpack_report_info.c
================================================================================
================================================================================
umfpack_report_matrix.c
================================================================================
================================================================================
umfpack_report_numeric.c
================================================================================
     24    324	    #####:  321:		return (FALSE) ;
     24    330	    #####:  327:		PRINTF (("\t...\n")) ;
     24    331	    #####:  328:		prl-- ;
     24    532	    #####:  529:	    return (FALSE) ;
     24    639	    #####:  636:	    PRINTF (("    ...\n")) ;
     24    640	    #####:  637:	    prl-- ;
     24    651	    #####:  648:		return (FALSE) ;
     24    657	    #####:  654:		PRINTF (("\t...\n")) ;
     24    658	    #####:  655:		prl-- ;
================================================================================
umfpack_report_perm.c
================================================================================
================================================================================
umfpack_report_status.c
================================================================================
================================================================================
umfpack_report_symbolic.c
================================================================================
================================================================================
umfpack_report_triplet.c
================================================================================
================================================================================
umfpack_report_vector.c
================================================================================
================================================================================
umfpack_save_numeric.c
================================================================================
================================================================================
umfpack_save_symbolic.c
================================================================================
================================================================================
umfpack_scale.c
================================================================================
================================================================================
umfpack_solve.c
================================================================================
================================================================================
umfpack_symbolic.c
================================================================================
================================================================================
umfpack_tictoc.c
================================================================================
================================================================================
umfpack_timer.c
================================================================================
================================================================================
umfpack_transpose.c
================================================================================
================================================================================
umfpack_triplet_to_col.c
================================================================================
================================================================================
umfpack_wsolve.c
================================================================================
     24    144	    #####:  141:	Info [UMFPACK_STATUS] = UMFPACK_ERROR_invalid_system ;
     24    145	    #####:  142:	return (UMFPACK_ERROR_invalid_system) ;
     24    158	    #####:  155:	Info [UMFPACK_STATUS] = UMFPACK_ERROR_argument_missing ;
     24    159	    #####:  156:	return (UMFPACK_ERROR_argument_missing) ;
     24    165	    #####:  162:	irstep = 0 ;
================================================================================
amd_1.c
================================================================================
================================================================================
amd_2.c
================================================================================
================================================================================
amd_aat.c
================================================================================
================================================================================
amd_control.c
================================================================================
================================================================================
amd_defaults.c
================================================================================
================================================================================
amd_info.c
================================================================================
================================================================================
amd_order.c
================================================================================
     24     82	    #####:   79:	if (info) Info [AMD_STATUS] = AMD_OUT_OF_MEMORY ;
     24     83	    #####:   80:	return (AMD_OUT_OF_MEMORY) ;	    /* problem too large */
     24    103	    #####:  100:	amd_free (Len) ;
     24    104	    #####:  101:	amd_free (Pinv) ;
     24    105	    #####:  102:	if (info) Info [AMD_STATUS] = AMD_OUT_OF_MEMORY ;
     24    106	    #####:  103:	return (AMD_OUT_OF_MEMORY) ;
     24    120	    #####:  117:	    amd_free (Rp) ;
     24    121	    #####:  118:	    amd_free (Ri) ;
     24    122	    #####:  119:	    amd_free (Len) ;
     24    123	    #####:  120:	    amd_free (Pinv) ;
     24    124	    #####:  121:	    if (info) Info [AMD_STATUS] = AMD_OUT_OF_MEMORY ;
     24    125	    #####:  122:	    return (AMD_OUT_OF_MEMORY) ;
     24    173	    #####:  170:	amd_free (Rp) ;
     24    174	    #####:  171:	amd_free (Ri) ;
     24    175	    #####:  172:	amd_free (Len) ;
     24    176	    #####:  173:	amd_free (Pinv) ;
     24    177	    #####:  174:	if (info) Info [AMD_STATUS] = AMD_OUT_OF_MEMORY ;
     24    178	    #####:  175:	return (AMD_OUT_OF_MEMORY) ;
================================================================================
amd_postorder.c
================================================================================
================================================================================
amd_post_tree.c
================================================================================
================================================================================
amd_preprocess.c
================================================================================
================================================================================
amd_valid.c
================================================================================
================================================================================
Last line of each output file: 
================================================================================
Out/1_di/ut.out
ALL TESTS PASSED: rnorm 1.35e-10 (1.19e-07 shl0, 7.08e-05 arc130 2.95e-08 omega2) cputime 59.09
=================================================================
Out/1_dl/ut.out
ALL TESTS PASSED: rnorm 1.35e-10 (1.19e-07 shl0, 7.08e-05 arc130 2.95e-08 omega2) cputime 51.26
=================================================================
Out/1g_di/ut.out
ALL TESTS PASSED: rnorm 1.03e-10 (1.19e-07 shl0, 5.65e-05 arc130 4.58e-09 omega2) cputime 39.95
=================================================================
Out/1g_dl/ut.out
ALL TESTS PASSED: rnorm 1.03e-10 (1.19e-07 shl0, 5.65e-05 arc130 4.58e-09 omega2) cputime 34.86
=================================================================
Out/1g_zi/ut.out
ALL TESTS PASSED: rnorm 9.88e-05 (1.33e-07 shl0, 5.84e-05 arc130 3.66e-10 omega2) cputime 75.33
=================================================================
Out/1g_zl/ut.out
ALL TESTS PASSED: rnorm 9.88e-05 (1.33e-07 shl0, 5.84e-05 arc130 3.66e-10 omega2) cputime 75.14
=================================================================
Out/1_zi/ut.out
ALL TESTS PASSED: rnorm 9.88e-05 (1.33e-07 shl0, 7.31e-05 arc130 6.19e-10 omega2) cputime 98.83
=================================================================
Out/1_zl/ut.out
ALL TESTS PASSED: rnorm 9.88e-05 (1.33e-07 shl0, 7.31e-05 arc130 6.19e-10 omega2) cputime 97.77
=================================================================
Out/2_di/ut.out
ALL TESTS PASSED: rnorm 1.49e-10 (1.19e-07 shl0, 6.76e-05 arc130 2.84e-08 omega2) cputime 52.76
=================================================================
Out/2_dl/ut.out
ALL TESTS PASSED: rnorm 1.49e-10 (1.19e-07 shl0, 6.76e-05 arc130 2.84e-08 omega2) cputime 44.59
=================================================================
Out/2g_di/ut.out
ALL TESTS PASSED: rnorm 1.06e-10 (1.19e-07 shl0, 5.65e-05 arc130 1.16e-08 omega2) cputime 33.96
=================================================================
Out/2g_dl/ut.out
ALL TESTS PASSED: rnorm 1.06e-10 (1.19e-07 shl0, 5.65e-05 arc130 1.16e-08 omega2) cputime 30.15
=================================================================
Out/2g_zi/ut.out
ALL TESTS PASSED: rnorm 9.88e-05 (1.33e-07 shl0, 5.69e-05 arc130 1.34e-09 omega2) cputime 58.91
=================================================================
Out/2g_zl/ut.out
ALL TESTS PASSED: rnorm 9.88e-05 (1.33e-07 shl0, 5.69e-05 arc130 1.34e-09 omega2) cputime 58.82
=================================================================
Out/2_zi/ut.out
ALL TESTS PASSED: rnorm 9.88e-05 (1.33e-07 shl0, 6.77e-05 arc130 1.65e-09 omega2) cputime 79.13
=================================================================
Out/2_zl/ut.out
ALL TESTS PASSED: rnorm 9.88e-05 (1.33e-07 shl0, 6.77e-05 arc130 1.65e-09 omega2) cputime 79.21
=================================================================
Out/5_di/ut.out
ALL TESTS PASSED: rnorm 1.35e-10 (1.19e-07 shl0, 8.09e-05 arc130 1.44e-08 omega2) cputime 59.41
=================================================================
Out/5_dl/ut.out
ALL TESTS PASSED: rnorm 1.35e-10 (1.19e-07 shl0, 8.09e-05 arc130 1.44e-08 omega2) cputime 49.39
=================================================================
Out/5_zi/ut.out
ALL TESTS PASSED: rnorm 9.88e-05 (1.33e-07 shl0, 8.10e-05 arc130 1.13e-09 omega2) cputime 98.82
=================================================================
Out/5_zl/ut.out
ALL TESTS PASSED: rnorm 9.88e-05 (1.33e-07 shl0, 8.10e-05 arc130 1.13e-09 omega2) cputime 98.19
=================================================================
Out/6_di/ut.out
ALL TESTS PASSED: rnorm 1.49e-10 (1.19e-07 shl0, 6.76e-05 arc130 2.84e-08 omega2) cputime 0
=================================================================
Out/6_dl/ut.out
ALL TESTS PASSED: rnorm 1.49e-10 (1.19e-07 shl0, 6.76e-05 arc130 2.84e-08 omega2) cputime 0
=================================================================
Out/6_zi/ut.out
ALL TESTS PASSED: rnorm 9.88e-05 (1.33e-07 shl0, 6.77e-05 arc130 1.65e-09 omega2) cputime 0
=================================================================
Out/6_zl/ut.out
ALL TESTS PASSED: rnorm 9.88e-05 (1.33e-07 shl0, 6.77e-05 arc130 1.65e-09 omega2) cputime 0
=================================================================
Out/7_di/ut.out
ALL TESTS PASSED: rnorm 1.35e-10 (1.19e-07 shl0, 7.08e-05 arc130 2.95e-08 omega2) cputime 61.16
=================================================================
Out/7_dl/ut.out
ALL TESTS PASSED: rnorm 1.35e-10 (1.19e-07 shl0, 7.08e-05 arc130 2.95e-08 omega2) cputime 49.42
=================================================================
Out/7_zi/ut.out
ALL TESTS PASSED: rnorm 9.88e-05 (1.33e-07 shl0, 7.31e-05 arc130 6.19e-10 omega2) cputime 96.29
=================================================================
Out/7_zl/ut.out
ALL TESTS PASSED: rnorm 9.88e-05 (1.33e-07 shl0, 7.31e-05 arc130 6.19e-10 omega2) cputime 95.47
=================================================================
Out/8_di/ut.out
ALL TESTS PASSED: rnorm 1.49e-10 (1.19e-07 shl0, 6.76e-05 arc130 2.84e-08 omega2) cputime 51.65
=================================================================
Out/8_dl/ut.out
ALL TESTS PASSED: rnorm 1.49e-10 (1.19e-07 shl0, 6.76e-05 arc130 2.84e-08 omega2) cputime 44.36
=================================================================
Out/8_zi/ut.out
ALL TESTS PASSED: rnorm 9.88e-05 (1.33e-07 shl0, 6.77e-05 arc130 1.65e-09 omega2) cputime 78.02
=================================================================
Out/8_zl/ut.out
ALL TESTS PASSED: rnorm 9.88e-05 (1.33e-07 shl0, 6.77e-05 arc130 1.65e-09 omega2) cputime 78.32
=================================================================
